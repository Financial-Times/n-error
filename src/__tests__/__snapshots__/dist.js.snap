// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`nError function has methods as nError creator of status named after error type in camelCase 1`] = `
NError {
  "message": "some error message",
  "status": 404,
}
`;

exports[`nError is a constructor function creates nError instance exposes all fileds including .stack in Object.assign 1`] = `
NError {
  "a": "a",
  "b": "b",
  "c": "c",
  "message": "test",
}
`;

exports[`nError is a constructor function creates nError instance with .extend() prototype method that creates new instance and maintains the stack 1`] = `
NError {
  "message": "some message",
  "next": "TEST",
}
`;

exports[`nError is a constructor function creates nError instance with .remove() prototype method that creates new instance and maintains the stack 1`] = `
NError {
  "message": "some message",
}
`;

exports[`nError is a constructor function creates nError instance with .stack to trace the callStack 1`] = `
NError {
  "message": "some message",
  "type": "SOME_TYPE",
}
`;

exports[`parseFetchError format isomorphic-fetch response error correctly 1`] = `
NError {
  "category": "FETCH_RESPONSE_ERROR",
  "contentType": "text/plain; charset=utf-8",
  "message": "403 Forbidden",
  "status": 403,
}
`;

exports[`parseFetchError format network error correctly 1`] = `
NError {
  "category": "FETCH_NETWORK_ERROR",
  "code": "MOCKED_FETCH_NETWORK_ERROR_CODE",
  "message": "mocked fetch network error",
}
`;

exports[`parseFetchError format node-fetch response error correctly 1`] = `
NError {
  "category": "FETCH_RESPONSE_ERROR",
  "contentType": "text/plain; charset=utf-8",
  "message": "403 Forbidden",
  "status": 403,
}
`;
